<?xml version="1.0" encoding="UTF-8"?>
<schema
		xmlns="http://www.w3.org/2001/XMLSchema"
		xmlns:plan="http://www.springsource.org/schema/dm-server/plan"
		targetNamespace="http://www.springsource.org/schema/dm-server/plan"
		elementFormDefault="qualified">

<!-- Types -->
	<complexType name="artifactType">
        <attribute name="type" type="string" use="required" >
			<annotation>
				<documentation><![CDATA[The type of the artifact.]]></documentation>
			</annotation>
		</attribute>
		<attribute name="name" type="string" use="required" >
			<annotation>
				<documentation><![CDATA[The name of the artifact.]]></documentation>
			</annotation>
		</attribute>
		<attribute name="version" use="optional" default="0">
            <annotation>
            	<documentation><![CDATA[The version or version range for this artifact.
This version or version number must meet the OSGi version specification. This attribute is optional and when not specified will result in a default value of "0" meaning 0 to infinity in OSGi.]]></documentation>
            </annotation>
            <simpleType>
				<restriction base="string">
					<pattern value="[\[\(]{1}( )*(\d(.\d(.\d(.([\w_-])+)?)?)?)( )*,( )*(\d(.\d(.\d(.([\w_-])+)?)?)?)( )*[\]\)]{1}|\d(.\d(.\d(.([\w_-])+)?)?)?"/>
				</restriction>
			</simpleType>
		</attribute>
	</complexType>

	<complexType name="plan">
        <sequence minOccurs="1" maxOccurs="unbounded">
			<element name="artifact" type="plan:artifactType">
				<annotation>
					<documentation><![CDATA[An artifact to include as part of this plan.]]></documentation>
				</annotation>
			</element>
		</sequence>
		<attribute name="name" type="string" use="required">
			<annotation>
				<documentation><![CDATA[The name of this plan.This is one component of the unique identifier for this plan along with a type of 'plan' and a specified version.]]></documentation>
			</annotation>
		</attribute>
		<attribute name="version" use="required">
            <annotation>
            	<documentation><![CDATA[The version of this plan.This version must meet the OSGi version specification. This is one component of the unique identifier for this plan along with a type of 'plan' and a specified name.]]></documentation>
            </annotation>
            <simpleType>
				<restriction base="string">
					<pattern value="\d(.\d(.\d(.([\w_-])+)?)?)?"/>
				</restriction>
			</simpleType>
		</attribute>
		<attribute name="scoped" type="boolean" use="required">
            <annotation>
            	<documentation><![CDATA[Whether or not the artifacts in the plan should be installed into a plan-specific scope. When scoping is disabled, the artifacts are deployed into the global scope and are available for access by all other artifacts.]]></documentation>
            </annotation>
		</attribute>
		<attribute name="atomic" type="boolean" use="required" >
			<annotation>
				<documentation><![CDATA[Whether the lifecycle of the artifacts in the plan should be tied together. Making a plan atomic means that install, start, stop and uninstall events for a single artifact in the plan will be escalated to all artifacts in the plan. Also, in an atomic plan, dm Server prevents artifacts from being in inconsistent states. For example, if one artifact should fail to start, then dm Server will stop all artifacts in the plan.]]></documentation>
			</annotation>
		</attribute>
	</complexType>

<!-- Elements -->
	<element name="plan" type="plan:plan">
		<annotation>
			<documentation><![CDATA[Plans are a way to group bundles together as a single logical unit in dm Server. Within a plan, bundles and services can be placed into a scope that isolates them from the rest of the system. This scoping ensures that the bundles wire to each other and see each other's services in preference to services from outside the scope. Scoping also prevents application code from leaking into the global scope or scope of another application. In addition, a plan can serve as a way to link the lifcycle of a group of bundles together atomically. This atomicity ensures that instal, start, stop, and uninstall events on a single artifact in the plan will be escalated to all artifacts in the plan.]]></documentation>
		</annotation>
	</element>

</schema>